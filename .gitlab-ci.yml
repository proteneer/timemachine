stages:          # List of stages for jobs, and their order of execution
  - build-docker
  - lint
  - test

variables:
    # The default CI branch should slugify to the same name, such that $CI_COMMIT_REF_SLUG == $CI_DEFAULT_BRANCH
    # which allows branches to use the default's branchs image as a cache
    DOCKER_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG

workflow:
  rules:
    # Only run the pipeline for a pull request or the default branch
    # In the case of the default branch, we want to build the image so that
    # other branches have a base image to cache from when possible.
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'
    - if: $CI_EXTERNAL_PULL_REQUEST_IID
    - if: $NIGHTLY_TESTS

docker_build:
  stage: build-docker
  image: docker:27.3.1
  tags:
    - aws-tardis-gpu
  script:
    - DOCKER_HOST=tcp://localhost:2375 docker login -u $CI_REGISTRY_USER -p $CI_JOB_TOKEN $CI_REGISTRY
    # Pull the docker containers
    - docker pull $DOCKER_TAG || docker pull $CI_REGISTRY_IMAGE:$CI_DEFAULT_BRANCH || true
    # Cache from default branch and most recent image to get most out of the caching
    - docker build -t $DOCKER_TAG --cache-from $DOCKER_TAG --cache-from $CI_REGISTRY_IMAGE:$CI_DEFAULT_BRANCH --cache-to type=inline --target timemachine_ci .
    - docker push $DOCKER_TAG

lint:
  stage: lint
  image: $DOCKER_TAG
  needs: ["docker_build"]
  # Specify cuda arch, so that a GPU is not required to detect the cuda arch.
  variables:
    CUDA_ARCH: 75
  tags:
    - aws-tardis-cpu
  rules:
    - if: $CI_EXTERNAL_PULL_REQUEST_IID
    - if: $NIGHTLY_TESTS
  script:
    - make verify

nocuda-tests:
  stage: test
  image: $DOCKER_TAG
  needs: ["lint"]
  tags:
    - aws-tardis-cpu
  rules:
    - if: $CI_EXTERNAL_PULL_REQUEST_IID
  script:
    - SKIP_CUSTOM_OPS=1 pip install .[test]
    - make nocuda_tests
  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_REF_NAME-nocuda-tests"
    paths:
        - coverage/
    when: on_success
    expire_in: 1 week

nogpu-tests:
  stage: test
  image: $DOCKER_TAG
  needs: ["lint"]
  tags:
    - aws-tardis-cpu
  rules:
    - if: $CI_EXTERNAL_PULL_REQUEST_IID
  # Build custom ops with fixed cuda arch, to test C++ that is CPU only
  variables:
    CMAKE_ARGS: -DCUDA_ARCH=75
  script:
    - pip install .[test]
    - make nogpu_tests
  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_REF_NAME-nogpu-tests"
    paths:
        - coverage/
    when: on_success
    expire_in: 1 week

memory-tests:
  stage: test
  image: $DOCKER_TAG
  needs: ["lint"]
  tags:
    - aws-tardis-gpu
  rules:
    - if: $CI_EXTERNAL_PULL_REQUEST_IID
  script:
    - pip install .[test]
    - make memcheck_tests
  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_REF_NAME-memtests"
    paths:
        - coverage/
    when: on_success
    expire_in: 1 week

unit-tests:
  stage: test
  image: $DOCKER_TAG
  needs: ["lint"]
  tags:
    - aws-tardis-gpu
  rules:
    - if: $CI_EXTERNAL_PULL_REQUEST_IID
  script:
    - pip install .[test]
    - make unit_tests
  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_REF_NAME-tests"
    paths:
        - coverage/
    when: on_success
    expire_in: 1 week

nightly-tests:
  stage: test
  image: $DOCKER_TAG
  needs: ["lint"]
  tags:
    - aws-tardis-gpu
  rules:
    - if: $NIGHTLY_TESTS
  script:
    - pip install .[test]
    - make nightly_tests
  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_REF_NAME-nightly-tests"
    paths:
        - coverage/
    when: on_success
    expire_in: 1 week

nightly-memcheck-tests:
  stage: test
  image: $DOCKER_TAG
  needs: ["lint"]
  tags:
    - aws-tardis-gpu
  rules:
    - if: $NIGHTLY_TESTS
  script:
    - pip install .[test]
    - make nightly_memcheck_tests
  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_REF_NAME-nightly-memcheck-tests"
    paths:
        - coverage/
    when: on_success
    expire_in: 1 week

nightly-tests-nocuda:
  stage: test
  image: $DOCKER_TAG
  needs: ["lint"]
  tags:
    - aws-tardis-cpu
  rules:
    - if: $NIGHTLY_TESTS
  script:
    - SKIP_CUSTOM_OPS=1 pip install .[test]
    - make nocuda_nightly_tests
  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_REF_NAME-nocuda-nightly-tests"
    paths:
        - coverage/
    when: on_success
    expire_in: 1 week

nightly-tests-nogpu:
  stage: test
  image: $DOCKER_TAG
  needs: ["lint"]
  tags:
    - aws-tardis-cpu
  rules:
    - if: $NIGHTLY_TESTS
  # Build custom ops with fixed cuda arch, to test C++ that is CPU only
  variables:
    CMAKE_ARGS: -DCUDA_ARCH=75
  script:
    - pip install .[test]
    - make nogpu_nightly_tests
  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_REF_NAME-nogpu-nightly-tests"
    paths:
        - coverage/
    when: on_success
    expire_in: 1 week
